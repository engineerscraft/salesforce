authentication.accessTokenValidityPeriod=30
authentication.refreshTokenValidityPeriod=90
authentication.signingKey=OURSFM
server.port=8080

page.cache.period=100
server.error.whitelabel.enabled=false

spring.datasource.username=sfmapp
spring.datasource.password=sfmapp
spring.datasource.url=jdbc:postgresql://localhost:5432/sfmdb
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.tomcat.maxActive=25
spring.datasource.tomcat.initialSize=10
spring.datasource.tomcat.maxIdle=20
spring.datasource.tomcat.testOnConnect=true
spring.datasource.tomcat.testOnBorrow=true 
spring.datasource.tomcat.validationQuery=SELECT 1

server.port=8080
server.compression.enabled=true
server.compression.excluded-user-agents= gozilla, traviata
server.compression.mime-types= text/html,text/xml,text/plain,text/css,text/javascript,text/json,application/x-javascript,application/javascript,application/json,image/jpg,image/png,application/pdf
server.compression.min-response-size= 1024

ldap.base=dc=example,dc=com
ldap.url=ldap://localhost:10389
ldap.user=uid=admin,ou=system
ldap.password=secret

hierarchy.search.limit=500
contact.pagesize=6
salesRep.pagesize=6

spring.mvc.view.prefix=/
spring.mvc.view.suffix=.html

##MultipartFileConfiguration
spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=10MB

##AuthenticationRepository
sql.getAccessId=SELECT nextval('SFM.ACCESS_ID_SEQ')
sql.saveNewToken=INSERT INTO SFM.ACCESS_TOKEN VALUES(?, current_timestamp, ?, ?, 0, NULL)
sql.existingTokenUpdateSql=UPDATE SFM.ACCESS_TOKEN SET EXPIRY_DATE = ?, REFRESH_COUNT = REFRESH_COUNT + 1, LAST_REFRESH_DATE = current_timestamp WHERE ACCESS_ID = ? AND USER_NAME = ?
sql.getAuthorization=SELECT DISTINCT A.* FROM SFM.PERMISSION A, SFM.ROLE B, SFM.ROLE_PERM C WHERE A.PERM_ID=C.PERM_ID AND B.ROLE_ID=C.ROLE_ID AND B.PUB_KEY IN (:roleList) AND A.PUB_KEY=:filter
sql.viewPermission=SELECT DISTINCT A.* FROM SFM.PERMISSION A, SFM.ROLE B, SFM.ROLE_PERM C WHERE A.PERM_ID=C.PERM_ID AND B.ROLE_ID=C.ROLE_ID AND B.PUB_KEY IN (:roleList) and A.PERM_TYPE='V'

##StatusRepository
sql.status.getAll.byEntity=SELECT STATUS_ID, PUB_KEY, DES, COLOR FROM SFM.STATUS WHERE ENTITY=? ORDER BY SORT_ORDER ASC;

#country
sql.country.list=SELECT * FROM SFM.COUNTRY

#district
sql.district.get.byStateId=SELECT D_ID, D_NAME FROM SFM.DISTRICT WHERE S_ID=?

#state
sql.state.get.byCountryId=SELECT S_ID, S_NAME FROM SFM.STATE WHERE C_ID=?

#product
sql.product.getAll=SELECT PROD_ID, PUB_KEY, DES, PRICE FROM SFM.PRODUCT WHERE VFROM <= CURRENT_DATE AND COALESCE(VTO, date '2099-12-31') > CURRENT_DATE

#division
sql.division.getAll.byRole=SELECT A.DIV_ID, A.PUB_KEY, A.DES FROM SFM.DIVISION A, SFM.DIV_ROLE B, SFM.ROLE C WHERE A.DIV_ID = B.DIV_ID AND B.ROLE_ID = C.ROLE_ID AND C.PUB_KEY IN (:roleList)

#app_sequence
sql.getSeq.byName=SELECT SEQ_VALUE FROM SFM.APP_SEQUENCE WHERE SEQ_NAME = ? FOR UPDATE
sql.updateSeq.byName=UPDATE SFM.APP_SEQUENCE SET SEQ_VALUE = ? WHERE SEQ_NAME = ?

#contact
sql.contact.page=select * from (select b.*, row_number() OVER (ORDER BY simi) AS rn from (SELECT a.*, similarity(sfm.f_immutable_concat_ws_ten_var(pub_key, f_name, m_name, l_name,company, desig, email, land, mob,null), ?) simi FROM   sfm.contact a WHERE  sfm.f_immutable_concat_ws_ten_var(pub_key, f_name, m_name, l_name, company, desig, email, land, mob,null) ILIKE ? order by similarity(sfm.f_immutable_concat_ws_ten_var(pub_key, f_name, m_name, l_name, company, desig, email, land, mob,null), ?)) b LIMIT ?) c where rn>=?
sql.contactTable.insert=INSERT INTO SFM.CONTACT VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, NULL, NULL)
sql.contactAttrTable.insert=INSERT INTO SFM.CONTACT_ATTR VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, NULL, NULL)

#sales rep
sql.salesRep.page=select * from (select b.*, row_number() OVER (ORDER BY simi) AS rn from (SELECT a.*, similarity(sfm.f_immutable_concat_ws_ten_var(pub_key, f_name, m_name, l_name, land, mob,  email, desig, null, null), ?) simi FROM   sfm.sales_rep a WHERE  sfm.f_immutable_concat_ws_ten_var(pub_key, f_name, m_name, l_name, land, mob,  email, desig, null, null) ILIKE ? order by similarity(sfm.f_immutable_concat_ws_ten_var(pub_key, f_name, m_name, l_name, land, mob,  email, desig, null, null), ?)) b LIMIT ?) c where rn>=?
sql.salesRepTable.insert=INSERT INTO SFM.SALES_REP VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, NULL, NULL)


